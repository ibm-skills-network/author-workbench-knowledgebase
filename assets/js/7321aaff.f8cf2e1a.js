"use strict";(self.webpackChunkauthor_workbench_knowledgebase=self.webpackChunkauthor_workbench_knowledgebase||[]).push([[188],{2885:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"labs/flutter-web-hot-restart","title":"Flutter Web Hot Restart in Cloud IDE","description":"Flutter Web has awesome hot restart feature that allows you to see your changes in the browser instantly by pressing r in the terminal. This feature automatically refreshes the web app without needing to manually stop and start the server each time you make a change.","source":"@site/docs/labs/flutter-web-hot-restart.md","sourceDirName":"labs","slug":"/labs/flutter-web-hot-restart","permalink":"/docs/labs/flutter-web-hot-restart","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-skills-network/author-workbench-knowledgebase/tree/master/docs/labs/flutter-web-hot-restart.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Claim an IBM Cloud Trial code","permalink":"/docs/labs/claim-ibm-cloud-trial"},"next":{"title":"Free APIs Available in Skills Network Labs","permalink":"/docs/labs/free-apis"}}');var s=r(4848),o=r(8453);const i={},a="Flutter Web Hot Restart in Cloud IDE",l={},h=[{value:"Hot Reload with a Bash Script",id:"hot-reload-with-a-bash-script",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Steps to Use the Script:",id:"steps-to-use-the-script",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"flutter-web-hot-restart-in-cloud-ide",children:"Flutter Web Hot Restart in Cloud IDE"})}),"\n",(0,s.jsxs)(t.p,{children:["Flutter Web has awesome hot restart feature that allows you to see your changes in the browser instantly by pressing ",(0,s.jsx)(t.strong,{children:"r"})," in the terminal. This feature automatically refreshes the web app without needing to manually stop and start the server each time you make a change."]}),"\n",(0,s.jsx)(t.p,{children:"However, in our Cloud IDE, this feature doesn\u2019t work as expected. This is because the Cloud IDE environment differs from the standard setup of a browser connected to a display server, which Flutter relies on for hot restart to function. But don't worry! We\u2019ve created a simple workaround using a bash script to mimic the hot reload functionality."}),"\n",(0,s.jsx)(t.h2,{id:"hot-reload-with-a-bash-script",children:"Hot Reload with a Bash Script"}),"\n",(0,s.jsx)(t.p,{children:"To overcome this limitation, you can use the following bash script to monitor file changes and automatically restart your Flutter web server. The script will ensure that your project is rebuilt and the changes are visible in the browser, just like the hot restart would."}),"\n",(0,s.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.p,{children:["For the following script to work, please install ",(0,s.jsx)(t.code,{children:"inotify-tools"})," by running the following commands in the terminal:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo apt update\nsudo apt install -y inotify-tools\n"})}),"\n",(0,s.jsx)(t.h3,{id:"steps-to-use-the-script",children:"Steps to Use the Script:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Copy and Paste the Bash Script"}),(0,s.jsx)(t.br,{}),"\n","Copy the following script into a file (for example, ",(0,s.jsx)(t.code,{children:"hot_reload.sh"}),")."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'#!/bin/bash\n\n# Path to your Flutter project directory\nPROJECT_DIR="/home/project/hello_world_web/lib"\n\n# Function to run Flutter web server\nstart_server() {\n    echo "Starting Flutter web server..."\n\n    cd $PROJECT_DIR/..\n    flutter build web\n    # Goto build directory\n    cd build/web\n    # Start server on port 8080\n    python3 -m http.server 8080 &\n    SERVER_PID=$!\n\n    echo "Flutter server started with PID $SERVER_PID"\n}\n\n# Function to stop Flutter web server\nstop_server() {\n    if [ ! -z "$SERVER_PID" ]; then\n        echo "Stopping Flutter web server with PID $SERVER_PID"\n        kill $SERVER_PID\n        wait $SERVER_PID 2>/dev/null\n    fi\n}\n\n# Watch for file changes and restart server\nwatch_and_reload() {\n    inotifywait -m -r -e modify,create,delete --exclude \'\\.git|build|\\.dart_tool|\\.idea|\\.vscode\' $PROJECT_DIR |\n    while read -r directory events filename; do\n        echo "Change detected in $directory$filename. Restarting server..."\n        stop_server\n        start_server\n    done\n}\n\n# Cleanup function to handle script exit\ncleanup() {\n    echo "Cleaning up before exit..."\n    stop_server\n    exit 0\n}\n\n# Trap SIGINT (Ctrl-C) and call the cleanup function\ntrap cleanup SIGINT\n\n# Initial server start\nstart_server\n\n# Start watching for changes\nwatch_and_reload\n'})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Set the Correct Project Directory"}),(0,s.jsx)(t.br,{}),"\n","In the script, make sure to update the line that sets ",(0,s.jsx)(t.code,{children:"PROJECT_DIR"})," to point to your Flutter project directory."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:'PROJECT_DIR="/home/project/your_flutter_project/lib"'})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Run the Script"}),(0,s.jsx)(t.br,{}),"\n","After saving the script, give it execute permissions and run it:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"chmod +x hot_reload.sh\n./hot_reload.sh\n"})}),"\n",(0,s.jsx)(t.p,{children:"The script will start the Flutter web server, and any time you modify a file in your project, it will detect the change, rebuild the project, and restart the server automatically."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Stop the Script"}),(0,s.jsx)(t.br,{}),"\n","To stop the script, simply press ",(0,s.jsx)(t.code,{children:"Ctrl + C"})," in the terminal. This will cleanly stop the server."]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>a});var n=r(6540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);